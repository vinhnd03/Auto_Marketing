import { useEffect, useState } from "react";
import HeroAnimation from "../components/HeroAnimation";
import { CheckCircleIcon } from "@heroicons/react/24/solid";
import AOS from "aos";
import "aos/dist/aos.css";
import bgPattern from "../assets/bermuda-circle.svg";

export default function Home() {
  const [selectedPlan, setSelectedPlan] = useState(null);
  useEffect(() => {
    AOS.init({ duration: 1000, once: true });
  }, []);

  return (
    <>
      {/* Hero Section */}
      <section className="bg-[#e6f0ff] pt-0 pb-12 md:pb-16" data-aos="fade-up">
        <div className="container mx-auto px-6 grid grid-cols-1 md:grid-cols-2 items-center gap-10 md:gap-16">
          <div>
            <h1 className="text-4xl sm:text-5xl font-extrabold leading-tight mb-6 text-gray-900">
              Gi·∫£i ph√°p{" "}
              <span className="bg-gradient-to-r from-blue-600 via-purple-500 to-pink-500 bg-clip-text text-transparent">
                AutoMarketing
              </span>{" "}
              cho doanh nghi·ªáp hi·ªán ƒë·∫°i
            </h1>
            <p className="text-lg text-gray-700 mb-8">
              T·ª± ƒë·ªông h√≥a quy tr√¨nh ti·∫øp th·ªã, tƒÉng tr∆∞·ªüng doanh thu v√† c√° nh√¢n
              h√≥a tr·∫£i nghi·ªám kh√°ch h√†ng ‚Äì t·∫•t c·∫£ ch·ªâ trong m·ªôt n·ªÅn t·∫£ng duy
              nh·∫•t.
            </p>
            <div className="flex flex-wrap gap-4">
              <a
                href="/contact"
                className="px-6 py-3 bg-blue-600 text-white rounded-lg font-semibold shadow-md hover:bg-blue-700 transition"
              >
                B·∫Øt ƒë·∫ßu ngay
              </a>
              <a
                href="/features"
                className="px-6 py-3 border border-blue-600 text-blue-600 rounded-lg font-semibold hover:bg-blue-50 transition"
              >
                Kh√°m ph√° t√≠nh nƒÉng
              </a>
            </div>
          </div>
          <HeroAnimation />
        </div>
      </section>

      {/*WHy  Section */}
      <section
        className="relative bg-purple-100 pb-28 pt-20 overflow-hidden"
        data-aos="fade-up"
      >
        {/* Decorative background circles */}
        <div className="absolute -top-10 -left-10 w-48 h-48 bg-yellow-100 rounded-full opacity-30"></div>
        <div className="absolute -bottom-10 -right-10 w-72 h-72 bg-yellow-100 rounded-full opacity-20"></div>

        <div className="container mx-auto px-6 text-center max-w-5xl relative z-10">
          <h2 className="text-4xl font-bold mb-4 text-gray-900">
            T·∫°i sao ch√∫ng t√¥i x√¢y d·ª±ng n·ªÅn t·∫£ng n√†y?
          </h2>
          <div className="w-24 h-1 bg-blue-600 mx-auto mb-6 rounded-full"></div>

          <p className="text-lg text-gray-700 mb-14">
            Trong k·ª∑ nguy√™n s·ªë, doanh nghi·ªáp nh·ªè v√† v·ª´a th∆∞·ªùng g·∫∑p kh√≥ khƒÉn
            trong vi·ªác duy tr√¨ s·ª± hi·ªán di·ªán tr·ª±c tuy·∫øn, t·ªëi ∆∞u h√≥a n·ªôi dung v√†
            ti·∫øp c·∫≠n kh√°ch h√†ng ti·ªÅm nƒÉng.
            <span className="text-blue-600 font-semibold"> AutoMarketing </span>
            ƒë∆∞·ª£c t·∫°o ra ƒë·ªÉ gi√∫p b·∫°n t·ª± ƒë·ªông h√≥a m·ªçi kh√¢u ti·∫øp th·ªã ‚Äì t·ª´ l√™n k·∫ø
            ho·∫°ch, t·∫°o n·ªôi dung ƒë·∫øn ph√¢n t√≠ch hi·ªáu su·∫•t ‚Äì m·ªôt c√°ch ƒë∆°n gi·∫£n v√†
            hi·ªáu qu·∫£.
          </p>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-10 text-left">
            {[
              {
                title: "Ti·∫øt ki·ªám th·ªùi gian",
                desc: "T·ª± ƒë·ªông ho√° vi·ªác ƒëƒÉng n·ªôi dung v√† chƒÉm s√≥c kh√°ch h√†ng, gi√∫p b·∫°n t·∫≠p trung v√†o chi·∫øn l∆∞·ª£c tƒÉng tr∆∞·ªüng.",
                icon: "‚è±Ô∏è",
              },
              {
                title: "Ra quy·∫øt ƒë·ªãnh th√¥ng minh",
                desc: "Ph√¢n t√≠ch d·ªØ li·ªáu theo th·ªùi gian th·ª±c ƒë·ªÉ t·ªëi ∆∞u h√≥a chi·∫øn d·ªãch v√† chi ph√≠ ti·∫øp th·ªã.",
                icon: "üìä",
              },
              {
                title: "Tri·ªÉn khai d·ªÖ d√†ng",
                desc: "Giao di·ªán ƒë∆°n gi·∫£n, d·ªÖ h·ªçc, d·ªÖ t√≠ch h·ª£p v√†o quy tr√¨nh l√†m vi·ªác hi·ªán t·∫°i.",
                icon: "üß©",
              },
            ].map((item, index) => (
              <div
                key={index}
                className="bg-white p-8 rounded-3xl border border-blue-100 shadow-md hover:shadow-xl transition relative"
              >
                <div className="absolute -top-6 left-6 w-12 h-12 bg-blue-600 text-white rounded-full flex items-center justify-center text-2xl shadow-md">
                  {item.icon}
                </div>
                <h3 className="text-xl font-semibold mt-6 mb-3 text-blue-700">
                  {item.title}
                </h3>
                <p className="text-gray-700 leading-relaxed">{item.desc}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="bg-white py-24" id="features" data-aos="fade-up">
        <div className="container mx-auto px-6 text-center">
          <h2 className="text-4xl font-bold mb-14 text-gray-900">
            Nh·ªØng t√≠nh nƒÉng n·ªïi b·∫≠t
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-10">
            {[
              {
                title: "Chi·∫øn d·ªãch t·ª± ƒë·ªông",
                desc: "T·∫°o, qu·∫£n l√Ω v√† t·ª± ƒë·ªông h√≥a to√†n b·ªô chi·∫øn d·ªãch ti·∫øp th·ªã t·ª´ m·ªôt n∆°i duy nh·∫•t.",
              },
              {
                title: "Email c√° nh√¢n h√≥a",
                desc: "G·ª≠i ƒë√∫ng n·ªôi dung, ƒë·∫øn ƒë√∫ng ng∆∞·ªùi, v√†o ƒë√∫ng th·ªùi ƒëi·ªÉm v·ªõi hi·ªáu qu·∫£ t·ªëi ∆∞u.",
              },
              {
                title: "B√°o c√°o & ph√¢n t√≠ch",
                desc: "Theo d√µi hi·ªáu su·∫•t theo th·ªùi gian th·ª±c ƒë·ªÉ c·∫£i thi·ªán k·∫øt qu·∫£ li√™n t·ª•c.",
              },
            ].map((item, index) => (
              <div
                key={index}
                className="bg-gray-50 p-8 rounded-2xl shadow-md hover:shadow-xl transition text-left"
              >
                <CheckCircleIcon className="w-10 h-10 text-blue-600 mb-5" />
                <h3 className="text-xl font-semibold mb-3">{item.title}</h3>
                <p className="text-gray-600 leading-relaxed">{item.desc}</p>
              </div>
            ))}
          </div>
        </div>
      </section>
      {/* Pricing Section */}
      <section className="bg-[#f7faff] py-24" id="pricing" data-aos="fade-up">
        <div className="container mx-auto px-6 text-center">
          <h2 className="text-4xl font-bold mb-14 text-gray-900">
            G√≥i d·ªãch v·ª• ph√π h·ª£p v·ªõi b·∫°n
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                title: "C∆° b·∫£n",
                price: "Mi·ªÖn ph√≠",
                features: [
                  "T·ªëi ƒëa 1 chi·∫øn d·ªãch/th√°ng",
                  "Email t·ª± ƒë·ªông c∆° b·∫£n",
                  "H·ªó tr·ª£ qua email",
                ],
              },
              {
                title: "Chuy√™n nghi·ªáp",
                price: "499.000ƒë/th√°ng",
                features: [
                  "Kh√¥ng gi·ªõi h·∫°n chi·∫øn d·ªãch",
                  "Email & chatbot n√¢ng cao",
                  "Ph√¢n t√≠ch chuy√™n s√¢u",
                  "H·ªó tr·ª£ ∆∞u ti√™n",
                ],
              },
              {
                title: "Doanh nghi·ªáp",
                price: "T√πy ch·ªânh",
                features: [
                  "T√≠ch h·ª£p CRM",
                  "B√°o c√°o t√πy ch·ªânh",
                  "H·ªó tr·ª£ chuy√™n bi·ªát",
                  "G√≥i linh ho·∫°t theo nhu c·∫ßu",
                ],
              },
            ].map((plan, index) => {
              const isSelected = selectedPlan === index;
              return (
                <div
                  key={index}
                  onClick={() => setSelectedPlan(index)}
                  className={`cursor-pointer p-8 rounded-3xl border transition duration-300 shadow-md ${
                    isSelected
                      ? "bg-blue-100 border-blue-600 shadow-lg scale-105"
                      : "bg-white border-gray-200 hover:border-blue-300 hover:shadow"
                  }`}
                >
                  <h3 className="text-2xl font-bold text-gray-900 mb-4">
                    {plan.title}
                  </h3>
                  <p className="text-3xl font-extrabold text-blue-600 mb-6">
                    {plan.price}
                  </p>
                  <ul className="text-gray-700 mb-6 space-y-3 text-left">
                    {plan.features.map((feature, idx) => (
                      <li key={idx} className="flex items-center gap-2">
                        <CheckCircleIcon className="w-5 h-5 text-green-500" />
                        {feature}
                      </li>
                    ))}
                  </ul>
                  {isSelected && (
                    <div className="text-sm font-medium text-blue-700 mt-2">
                      ‚úÖ G√≥i ƒë√£ ch·ªçn
                    </div>
                  )}
                  <a
                    href="/contact"
                    className={`mt-4 inline-block px-6 py-3 rounded-lg font-semibold transition ${
                      isSelected
                        ? "bg-blue-600 text-white hover:bg-blue-700"
                        : "bg-white border border-blue-600 text-blue-600 hover:bg-blue-50"
                    }`}
                  >
                    {isSelected ? "Ti·∫øp t·ª•c v·ªõi g√≥i n√†y" : "Ch·ªçn g√≥i"}
                  </a>
                </div>
              );
            })}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section
        className="relative overflow-hidden py-28 text-black text-center"
        data-aos="zoom-in"
      >
        {/* Animated background pattern layer */}
        <div
          style={{ backgroundImage: `url(${bgPattern})` }}
          className="absolute inset-0 bg-cover bg-center opacity-10 pointer-events-none animate-pulse"
          aria-hidden="true"
        ></div>

        {/* Content layer */}
        <div className="relative z-10 container mx-auto px-6 max-w-3xl">
          <h2 className="text-4xl md:text-5xl font-extrabold mb-6 leading-tight drop-shadow-lg">
            S·∫µn s√†ng ƒë·ªÉ <span className="text-yellow-300">tƒÉng tr∆∞·ªüng</span>?
          </h2>
          <p className="text-lg md:text-xl mb-10 opacity-90">
            D√πng th·ª≠ mi·ªÖn ph√≠ ngay h√¥m nay ‚Äì kh√¥ng c·∫ßn th·∫ª t√≠n d·ª•ng.
          </p>
          <a
            href="/contact"
            className="inline-block px-10 py-3 bg-gradient-to-r from-yellow-400 via-pink-500 to-red-500 text-black font-semibold rounded-full shadow-xl hover:brightness-110 transition-all duration-300 transform hover:scale-105"
          >
            üöÄ B·∫Øt ƒë·∫ßu mi·ªÖn ph√≠
          </a>
        </div>
      </section>
    </>
  );
}
